{"version":3,"sources":["components/Hero.tsx","components/Layout.tsx","components/SEO.tsx","contexts/participantContext.tsx","contexts/generateParticipants.ts","vadilators/participant-validator.ts","components/Table.tsx","components/Button.tsx","components/Input.tsx","pages/SignUp/commonStyles.ts","pages/SignUp/components/NewParticipant.tsx","components/ArrowIcon.tsx","hooks/useSortableData.ts","components/Icons.tsx","pages/SignUp/components/Participant.tsx","pages/SignUp/components/ParticipantList.tsx","pages/SignUp/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Hero","css","globalStyles","Main","styled","Layout","children","styles","SEO","Helmet","name","content","ParticipantContext","React","createContext","undefined","participantReducer","state","action","type","payload","filter","item","id","map","Error","ParticipantProvider","initialState","Array","fill","randomName","first","last","email","toLocaleLowerCase","replace","phone","randomMobile","useReducer","dispatch","value","useMemo","Provider","useParticipantContext","context","useContext","participants","addParticipant","participant","removeParticipant","editParticipant","participantSchema","Yup","required","matches","Table","props","rowBasecss","RowHeader","Row","Cell","StyledButton","button","color","Button","Input","error","rowCellCss","NewParticipant","formik","useFormik","initialValues","onSubmit","values","helpers","resetForm","validationSchema","handleSubmit","placeholder","errors","touched","onChange","handleChange","ArrowIcon","direction","xmlns","width","height","viewBox","d","sortByKey","sortedKey","isSortedDesc","a","b","EditIcon","focusable","role","DeleteIcon","IconButton","Participant","useState","isEditing","setEditing","toggleEditing","prev","onToggleEditing","DisplayParticipant","key","data-testid","onClick","Form","EditParticipant","headers","label","ParticipantList","data","sortFunc","currentSortConfig","setCurrentSortConfig","sortableItems","items","sort","config","currentSortedKey","useSortableData","sortedParticipants","header","SignUp","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3e43fd46.chunk.js","sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\n\nexport const Hero: React.FC = () => {\n  return (\n    <div\n      css={css`\n        background-color: #afb5bc;\n        display: flex;\n        align-items: center;\n        padding: 2rem;\n      `}\n    >\n      {/**TODO: logo here */}\n      <div\n        css={css`\n          width: 32px;\n          height: 32px;\n          margin-right: 32px;\n          background-color: #ffffff;\n        `}\n      />\n      <h1\n        css={css`\n          color: #ffffff;\n          line-height: 2rem;\n        `}\n      >\n        Iord Software\n      </h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport { css, Global } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nexport const globalStyles = css`\n  * {\n    box-sizing: border-box;\n  }\n  html,\n  body {\n    margin: 0;\n    color: #555;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,\n      'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    font-size: 16px;\n    line-height: 1.4;\n    background-color: #f5f5f5;\n  }\n  h1 {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 1.5rem;\n  }\n`;\n\nconst Main = styled('main')`\n  margin: 2rem auto;\n  max-width: 61rem;\n  padding: 2rem;\n`;\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <>\n      <Global styles={globalStyles} />\n      <Main>{children}</Main>\n    </>\n  );\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport const SEO: React.FC = () => {\n  return (\n    <Helmet>\n      <title>Digia React</title>\n      <meta name=\"description\" content=\"Digia React signup application\" />\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { v4 as id } from 'uuid';\nimport { Person, PersonWithId } from 'interfaces/Person';\nimport { generateParticipants } from './generateParticipants';\n\ntype ParticipantState = PersonWithId[];\n\ntype AddParticipantAction = {\n  type: 'ADD_PARTICIPANT';\n  payload: PersonWithId;\n};\n\ntype RemoveParticipantAction = {\n  type: 'REMOVE_PARTICIPANT';\n  payload: Pick<PersonWithId, 'id'>;\n};\n\ntype EditParticipantAction = {\n  type: 'EDIT_PARTICIPANT';\n  payload: PersonWithId;\n};\n\ntype Action = AddParticipantAction | RemoveParticipantAction | EditParticipantAction;\n\ninterface ParticipantContextType {\n  state: ParticipantState;\n  dispatch: React.Dispatch<Action>;\n}\n\nconst ParticipantContext = React.createContext<ParticipantContextType | undefined>(undefined);\n\nconst participantReducer = (state: ParticipantState, action: Action) => {\n  switch (action.type) {\n    case 'ADD_PARTICIPANT':\n      return [action.payload, ...state];\n    case 'REMOVE_PARTICIPANT':\n      return state.filter((item) => item.id !== action.payload.id);\n    case 'EDIT_PARTICIPANT':\n      return state.map((item) => {\n        if (item.id === action.payload.id) return action.payload;\n        return item;\n      });\n    default:\n      throw new Error(`Action is not supported: ${(action as any).type}`);\n  }\n};\n\ninterface ParticipantProviderProps {\n  initialState?: PersonWithId[];\n}\nexport const ParticipantProvider: React.FC<ParticipantProviderProps> = ({\n  children,\n  initialState = generateParticipants(),\n}) => {\n  const [state, dispatch] = React.useReducer<React.Reducer<ParticipantState, Action>>(participantReducer, initialState);\n\n  const value = React.useMemo(() => ({ state, dispatch }), [state]);\n\n  return <ParticipantContext.Provider value={value}>{children}</ParticipantContext.Provider>;\n};\n\nexport const useParticipantContext = () => {\n  const context = React.useContext(ParticipantContext);\n\n  if (!context) {\n    throw new Error('useParticipantContext must be used inside ParticipantProvider');\n  }\n  const { state, dispatch } = context;\n\n  const addParticipant = (participant: Person) => {\n    dispatch({\n      type: 'ADD_PARTICIPANT',\n      payload: { id: id(), ...participant },\n    });\n  };\n\n  const removeParticipant = (id: string) => {\n    dispatch({ type: 'REMOVE_PARTICIPANT', payload: { id } });\n  };\n\n  const editParticipant = (participant: PersonWithId) => {\n    dispatch({ type: 'EDIT_PARTICIPANT', payload: participant });\n  };\n\n  return {\n    participants: state,\n    addParticipant,\n    removeParticipant,\n    editParticipant,\n  };\n};\n","import randomName from 'random-name';\nimport randomMobile from 'random-mobile';\nimport { v4 as id } from 'uuid';\nimport { PersonWithId } from 'interfaces/Person';\n\nexport const generateParticipants = (): PersonWithId[] => {\n  let participants = new Array(20).fill(undefined).map(() => {\n    const name = `${randomName.first()} ${randomName.last()}`;\n\n    return {\n      id: id(),\n      name,\n      email: `${name}@example.com`.toLocaleLowerCase().replace(' ', '.'),\n      phone: randomMobile(),\n    };\n  });\n\n  return participants;\n};\n","import * as Yup from 'yup';\nimport { Person } from 'interfaces/Person';\n\nexport const participantSchema = Yup.object<Person>({\n  name: Yup.string().required(),\n  email: Yup.string()\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, 'Invalid email')\n    .required(),\n  phone: Yup.string()\n    .matches(/^\\d{10}$/, 'Phone has to be 10 digits')\n    .required(),\n});\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\n\ninterface TableComposition {\n  RowHeader: React.FC;\n  Row: React.FC;\n  Cell: React.FC;\n}\n\nexport const Table: React.FC & TableComposition = ({ children, ...props }) => {\n  return (\n    <div\n      css={css`\n        width: 100%;\n        background-color: #ffffff;\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst rowBasecss = css`\n  display: flex;\n  & > * {\n    flex: 1;\n  }\n`;\n\nconst RowHeader: React.FC = ({ children, ...props }) => {\n  return (\n    <div\n      css={css`\n        ${rowBasecss};\n        color: #757575;\n        font-size: 0.875rem;\n        line-height: 1rem;\n        font-weight: 500;\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst Row: React.FC = ({ children, ...props }) => {\n  return (\n    <div\n      css={css`\n        ${rowBasecss};\n        color: #505050;\n        font-size: 1rem;\n        line-height: 2rem;\n        font-weight: 400;\n        padding: 1rem;\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst Cell: React.FC = ({ children, ...props }) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        &:last-child {\n          justify-content: flex-end;\n          * + * {\n            margin-left: 0.5rem;\n          }\n        }\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nTable.RowHeader = RowHeader;\nTable.Row = Row;\nTable.Cell = Cell;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ntype ButtonColorType = 'primary' | 'inverted' | 'blue';\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  color?: ButtonColorType;\n}\n\nconst buttonDynamicStyle = (props: ButtonProps) => {\n  switch (props.color) {\n    case 'primary':\n      return css`\n        color: #757575;\n        background-color: #ededed;\n      `;\n    case 'inverted':\n      return css`\n        color: #07f;\n        background-color: #ededed;\n      `;\n    case 'blue':\n      return css`\n        color: #ffffff;\n        background-color: #07f;\n      `;\n  }\n};\n\nconst StyledButton = styled.button<ButtonProps>`\n  ${buttonDynamicStyle};\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1rem;\n  padding: 0.75rem 1.5rem;\n  cursor: pointer;\n  border: none;\n  outline: none;\n`;\n\nexport const Button: React.FC<ButtonProps> = ({ children, color = 'primary', ...props }) => {\n  return (\n    <StyledButton color={color} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\n\ninterface InputHtmlProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n  error?: boolean | string;\n}\n\nexport const Input: React.FC<InputHtmlProps> = ({ error = false, ...props }) => {\n  return (\n    <input\n      css={css`\n        padding: 0.5rem 1rem;\n        width: 100%;\n        background-color: #fafafa;\n        font-size: 1rem;\n        border: ${error ? '2px solid #f44336' : '1px solid #eeeeee'};\n      `}\n      {...props}\n    />\n  );\n};\n","import { css } from '@emotion/core';\n\nexport const rowCellCss = css`\n  & > :first-of-type {\n    flex: 1 1 20%;\n  }\n  & > :nth-of-type(2) {\n    flex: 1 1 35%;\n  }\n  & > :nth-of-type(3) {\n    flex: 1 1 24%;\n  }\n  & > :last-of-type {\n    flex: 1 1 21%;\n  }\n  & input {\n    margin-right: 1rem;\n  }\n`;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nimport { useParticipantContext } from 'contexts/participantContext';\nimport { Person } from 'interfaces/Person';\nimport { participantSchema } from 'vadilators/participant-validator';\nimport { Table } from 'components/Table';\nimport { Button } from 'components/Button';\nimport { Input } from 'components/Input';\nimport { rowCellCss } from '../commonStyles';\n\nconst getInitialForm = (): Person => {\n  return {\n    name: '',\n    email: '',\n    phone: '',\n  };\n};\n\nexport const NewParticipant: React.FC = (props) => {\n  const { addParticipant } = useParticipantContext();\n\n  const formik = useFormik<Person>({\n    initialValues: getInitialForm(),\n    onSubmit: (values, helpers) => {\n      addParticipant(values);\n      helpers.resetForm();\n    },\n    validationSchema: participantSchema,\n  });\n\n  return (\n    <form\n      onSubmit={formik.handleSubmit}\n      {...props}\n      css={css`\n        width: 100%;\n      `}\n    >\n      {/**TODO: show error */}\n      <Table>\n        <Table.Row\n          css={css`\n            padding: 1rem;\n            ${rowCellCss};\n          `}\n        >\n          <Table.Cell>\n            <Input\n              placeholder=\"Full name\"\n              name=\"name\"\n              error={formik.errors.name && formik.touched.name}\n              value={formik.values.name}\n              onChange={formik.handleChange}\n            />\n          </Table.Cell>\n          <Table.Cell>\n            <Input\n              placeholder=\"E-mail address\"\n              type=\"email\"\n              name=\"email\"\n              error={formik.errors.email && formik.touched.email}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n            />\n          </Table.Cell>\n          <Table.Cell>\n            <Input\n              placeholder=\"Phone number\"\n              type=\"tel\"\n              name=\"phone\"\n              error={formik.errors.phone && formik.touched.phone}\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n            />\n          </Table.Cell>\n          <Table.Cell>\n            <Button type=\"submit\">Add new</Button>\n          </Table.Cell>\n        </Table.Row>\n      </Table>\n    </form>\n  );\n};\n","import React from 'react';\n\ninterface ArrowIconProps {\n  direction: 'asc' | 'desc';\n}\n\nexport const ArrowIcon: React.FC<ArrowIconProps> = ({ direction }) => {\n  if (direction === 'asc') {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n        <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" />\n      </svg>\n    );\n  }\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n      <path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" />\n    </svg>\n  );\n};\n","import React from 'react';\n\ninterface SortConfig<T = any> {\n  sortedKey?: keyof T;\n  isSortedDesc?: boolean;\n}\nconst sortByKey = (sortedKey?: any, isSortedDesc = false) => (a: any, b: any) => {\n  if (!sortedKey) {\n    return 0;\n  }\n  if (a[sortedKey] < b[sortedKey]) {\n    return isSortedDesc ? 1 : -1;\n  }\n  if (a[sortedKey] > b[sortedKey]) {\n    return isSortedDesc ? -1 : 1;\n  }\n  return 0;\n};\n\nexport function useSortableData<T>(\n  data: T[],\n  sortFunc: (key?: keyof T, isSortedDesc?: boolean) => (a: T, b: T) => number = sortByKey,\n) {\n  const [currentSortConfig, setCurrentSortConfig] = React.useState<SortConfig<T>>({\n    sortedKey: undefined,\n    isSortedDesc: false,\n  });\n\n  const { sortedKey, isSortedDesc } = currentSortConfig;\n\n  const sortableItems = React.useMemo(() => {\n    const items = [...data];\n    items.sort(sortFunc(sortedKey, isSortedDesc));\n    return items;\n  }, [data, isSortedDesc, sortFunc, sortedKey]);\n\n  const sort = (config: Omit<SortConfig<T>, 'isSortedDesc'>) => {\n    // if the same key, reverse the order, otherwise SortedDesc is false\n    const isSortedDesc = config.sortedKey === currentSortConfig?.sortedKey ? !currentSortConfig.isSortedDesc : false;\n\n    setCurrentSortConfig({\n      sortedKey: config.sortedKey,\n      isSortedDesc,\n    });\n  };\n\n  return {\n    items: sortableItems,\n    sort,\n    isSortedDesc: currentSortConfig?.isSortedDesc,\n    currentSortedKey: currentSortConfig?.sortedKey,\n  };\n}\n","import React from 'react';\n\nexport const EditIcon: React.FC = (props) => {\n  return (\n    <svg\n      {...props}\n      viewBox=\"0 0 24 24\"\n      height=\"48\"\n      width=\"48\"\n      focusable=\"false\"\n      role=\"img\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>Edit icon</title>\n      <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n      <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n    </svg>\n  );\n};\n\nexport const DeleteIcon: React.FC = (props) => {\n  return (\n    <svg\n      {...props}\n      viewBox=\"0 0 24 24\"\n      height=\"48\"\n      width=\"48\"\n      focusable=\"false\"\n      role=\"img\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <title>Delete icon</title>\n      <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n      <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\n    </svg>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { PersonWithId } from 'interfaces/Person';\nimport { useParticipantContext } from 'contexts/participantContext';\nimport { useFormik } from 'formik';\nimport { participantSchema } from 'vadilators/participant-validator';\nimport { Button } from 'components/Button';\nimport { Table } from 'components/Table';\nimport { rowCellCss } from '../commonStyles';\nimport { Input } from 'components/Input';\nimport { EditIcon, DeleteIcon } from 'components/Icons';\n\nconst IconButton = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  padding: 0 0.5rem;\n  height: 1.5rem;\n  cursor: pointer;\n  & > svg {\n    fill: #909090;\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n`;\n\ninterface ParticipantProps {\n  participant: PersonWithId;\n}\n\nexport const Participant: React.FC<ParticipantProps> = ({ participant }) => {\n  const [isEditing, setEditing] = React.useState<boolean>(false);\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  if (isEditing) {\n    return <EditParticipant participant={participant} onToggleEditing={toggleEditing} />;\n  }\n  return <DisplayParticipant participant={participant} onToggleEditing={toggleEditing} />;\n};\n\ninterface DisplayParticipantProps extends ParticipantProps {\n  onToggleEditing: () => void;\n}\n\nconst DisplayParticipant: React.FC<DisplayParticipantProps> = ({ participant, onToggleEditing }) => {\n  const { removeParticipant } = useParticipantContext();\n  const handleRemove = () => {\n    removeParticipant(participant.id);\n  };\n\n  return (\n    <Table.Row\n      key={participant.id}\n      css={css`\n        border-bottom: 1px solid #f5f5f5;\n        padding: 1.5rem;\n        line-height: 1.5rem;\n        font-weight: 400;\n        ${rowCellCss};\n      `}\n    >\n      <Table.Cell data-testid=\"participant-name\">{participant.name}</Table.Cell>\n      <Table.Cell>{participant.email}</Table.Cell>\n      <Table.Cell>{participant.phone}</Table.Cell>\n      <Table.Cell>\n        <IconButton onClick={onToggleEditing} data-testid={`edit-${participant.id}`}>\n          <EditIcon />\n        </IconButton>\n        <IconButton onClick={handleRemove} data-testid={`delete-${participant.id}`}>\n          <DeleteIcon />\n        </IconButton>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst Form = styled('form')`\n  width: 100%;\n`;\ninterface EditParticipantProps extends ParticipantProps {\n  onToggleEditing: () => void;\n}\n\nconst EditParticipant: React.FC<EditParticipantProps> = ({ participant, onToggleEditing, ...props }) => {\n  const { editParticipant } = useParticipantContext();\n\n  const formik = useFormik<PersonWithId>({\n    initialValues: participant,\n    onSubmit: (values) => {\n      editParticipant(values);\n      onToggleEditing();\n    },\n    validationSchema: participantSchema,\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit} {...props}>\n      {/**TODO: show error */}\n      <Table.Row\n        css={css`\n          padding: 1rem;\n          border-bottom: 1px solid #f5f5f5;\n          ${rowCellCss};\n        `}\n      >\n        <Table.Cell>\n          <Input\n            placeholder=\"Full name\"\n            name=\"name\"\n            error={formik.errors.name && formik.touched.name}\n            value={formik.values.name}\n            onChange={formik.handleChange}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Input\n            placeholder=\"E-mail address\"\n            type=\"email\"\n            name=\"email\"\n            error={formik.errors.email && formik.touched.email}\n            value={formik.values.email}\n            onChange={formik.handleChange}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Input\n            placeholder=\"Phone number\"\n            type=\"tel\"\n            name=\"phone\"\n            error={formik.errors.phone && formik.touched.phone}\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Button color=\"inverted\" onClick={onToggleEditing}>\n            Cancel\n          </Button>\n          <Button color=\"blue\" type=\"submit\">\n            Save\n          </Button>\n        </Table.Cell>\n      </Table.Row>\n    </Form>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\n\nimport { useParticipantContext } from 'contexts/participantContext';\nimport { PersonWithId } from 'interfaces/Person';\nimport { ArrowIcon } from 'components/ArrowIcon';\nimport { Table } from 'components/Table';\nimport { useSortableData } from 'hooks/useSortableData';\nimport { Participant } from './Participant';\nimport { rowCellCss } from '../commonStyles';\n\ninterface Header {\n  key: keyof PersonWithId;\n  label: string;\n}\nconst headers: Header[] = [\n  {\n    key: 'name',\n    label: 'Name',\n  },\n  {\n    key: 'email',\n    label: 'E-mail address',\n  },\n  {\n    key: 'phone',\n    label: 'Phone number',\n  },\n];\nexport const ParticipantList: React.FC = () => {\n  const { participants } = useParticipantContext();\n  const { items: sortedParticipants, sort, currentSortedKey, isSortedDesc } = useSortableData<PersonWithId>(\n    participants,\n  );\n\n  return (\n    <Table>\n      <Table.RowHeader\n        css={css`\n          padding: 1rem 1.5rem;\n          border-bottom: 1px solid #f5f5f5;\n          ${rowCellCss};\n        `}\n      >\n        {headers.map((header) => (\n          <Table.Cell key={header.key}>\n            <span\n              onClick={() => sort({ sortedKey: header.key })}\n              data-testid={`sortBy-${header.key}`}\n              css={css`\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                & > svg {\n                  height: 1rem;\n                }\n              `}\n            >\n              {header.label}\n              {currentSortedKey === header.key ? <ArrowIcon direction={isSortedDesc ? 'desc' : 'asc'} /> : null}\n            </span>\n          </Table.Cell>\n        ))}\n        <Table.Cell />\n      </Table.RowHeader>\n\n      {sortedParticipants.map((participant) => (\n        <Participant key={participant.id} participant={participant} />\n      ))}\n    </Table>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React from 'react';\nimport { SEO } from 'components/SEO';\nimport { ParticipantProvider } from 'contexts/participantContext';\nimport { NewParticipant } from './components/NewParticipant';\nimport { ParticipantList } from './components/ParticipantList';\n\nexport const SignUp: React.FC = () => {\n  return (\n    <React.Fragment>\n      <SEO />\n      <h1\n        css={css`\n          margin-bottom: 2rem;\n        `}\n      >\n        List of participants\n      </h1>\n      <ParticipantProvider>\n        <NewParticipant\n          css={css`\n            margin-bottom: 0.5rem;\n          `}\n        />\n        <ParticipantList />\n      </ParticipantProvider>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Hero } from './components/Hero';\nimport { Layout } from './components/Layout';\n\nimport { SignUp } from 'pages/SignUp';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Hero />\n      <Layout>\n        <SignUp />\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nif ((module as any).hot) {\n  (module as any).hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}